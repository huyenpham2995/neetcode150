from typing import Optional

# Definition for a Node.

class Node:
    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):
        self.val = int(x)
        self.next = next
        self.random = random

def copyRandomList(head: 'Optional[Node]') -> 'Optional[Node]':
    if not head: return None
    
    cur = head
    copy_dict = {}

    while cur:
        if not copy_dict.get(cur):
            copy_dict[cur] = Node(cur.val)
        if cur.next:
            if not copy_dict.get(cur.next):
                copy_dict[cur.next] = Node(cur.next.val)
            copy_dict[cur].next = copy_dict[cur.next]
        if cur.random:
            if not copy_dict.get(cur.random):
                copy_dict[cur.random] = Node(cur.random.val)
            copy_dict[cur].random = copy_dict[cur.random]
        cur = cur.next
    
    return copy_dict[head]